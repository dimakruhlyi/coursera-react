{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","alert","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","Header","toggleNav","state","isOpen","isNavOpen","isModalOpen","toggleModal","handleLogin","setState","event","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","height","Collapse","navbar","Nav","NavItem","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","FormGroup","Input","innerRef","input","Footer","RenderLeader","Media","left","middle","body","heading","RenderAllLeaders","leaders","list","About","CardHeader","title","SubmitCommentForm","postComment","dishId","rating","author","comment","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.820bc980.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading} \r\n                        errMess={props.dishesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                        isLoading={props.promoLoading} \r\n                        errMess={props.promoErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                        isLoading={props.leadersLoading} \r\n                        errMess={props.leadersErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({dish}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n    \r\n    const Menu = (props) =>{\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n              <div  className=\"col-12 col-md-5 m-1\" key = {dish.id}>\r\n                <RenderMenuItem dish = {dish} />\r\n              </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div> \r\n            );\r\n    }\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n  \r\n    handleSubmit(values) {\r\n        console.log(\"Thank you for feedback! \" + JSON.stringify(values));\r\n        alert(\"Thank you for feedback! \" + JSON.stringify(values));\r\n        this.props.postFeedback( values.firstname, values.lastname, values.telnum, values.email,\r\n            values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n        //event.preventDefault();\r\n    }\r\n    \r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            KYIV<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model = \"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required; ',\r\n                                            minLength: 'Must be greater than 2 characters; ',\r\n                                            maxLength: 'Must be 15 characters or less; '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required; ',\r\n                                            minLength: 'Must be greater than 2 characters; ',\r\n                                            maxLength: 'Must be 15 characters or less; '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required; ',\r\n                                            minLength: 'Must be greater than 2 numbers; ',\r\n                                            maxLength: 'Must be 15 numbers or less; ',\r\n                                            isNumber: 'Must be a number; '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required; ',\r\n                                            validEmail: 'Invalid Email Address; '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n          isOpen: false,\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n        \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse navbar isOpen={this.state.isNavOpen}>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              KYIV<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardBody, CardHeader, Media , CardImg, Breadcrumb,BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {Loading} from './LoadingComponent';\r\nimport {Fade,Stagger} from 'react-animation-components';\r\n\r\nfunction RenderLeader ({leader}) {\r\n    return (\r\n<Media>\r\n    <Media left middle>\r\n            <Link to ={`/aboutus/${leader.id}`} />\r\n            <CardImg width=\"100%\" src={baseUrl + leader.image} alt={leader.name} />\r\n        </Media>\r\n        \r\n      <Media body className=\"ml-5\" >\r\n        <Media heading>\r\n        <h3>{leader.name} </h3>\r\n        </Media>\r\n           <p> {leader.designation}</p>\r\n           <p>{leader.description}</p>\r\n      </Media>\r\n    </Media>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction About(props) {\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n\r\n                   <div >\r\n                        { RenderAllLeaders(props) }\r\n                   </div>    \r\n                \r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        }\r\n    \r\n    \r\n    const RenderAllLeaders = (props) => {\r\n        if (props.leaders.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.leaders.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            const leaders = props.leaders.leaders.map((leader) => {\r\n                return (\r\n                    <Fade in>\r\n                        <RenderLeader leader={leader}/>\r\n                    </Fade>            \r\n                );         \r\n            });\r\n            return(\r\n                <Media list>\r\n                    <Stagger in>\r\n                        {leaders} \r\n                    </Stagger>\r\n                    \r\n                </Media>\r\n            );      \r\n        }\r\n    }\r\n\r\n\r\n\r\nexport default About;    ","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, \r\n    Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass SubmitCommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        // console.log(\"Current State is: \", JSON.stringify(values));\r\n        // alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId,  values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Col md=\"12\">\r\n                            <Label>Rating</Label>\r\n                            </Col>\r\n                            <Col md=\"12\">\r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>    \r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md=\"12\">\r\n                                <Label>Your Name</Label>\r\n                            </Col>\r\n                            <Col md=\"12\">\r\n                                <Control.text model=\".author\" name=\"author\" className=\"form-control\"\r\n                                id=\"author\"\r\n                                placeholder=\"Your Name\"\r\n                                validators={{\r\n                                    minLength: minLength(3),\r\n                                    maxLength: maxLength(15)\r\n                                }}\r\n                                />\r\n                                <Errors className=\"text-danger\"\r\n                                model=\".author\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md=\"12\">\r\n                                <Label>Comment</Label>\r\n                            </Col>\r\n                            <Col md=\"12\">\r\n                                <Control.textarea model=\".comment\" name=\"comment\"\r\n                                id=\"comment\"\r\n                                className=\"form-control\"\r\n                                rows=\"6\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md=\"12\">\r\n                                <Button type=\"submit\" color=\"success\">Submit</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <button onClick={this.toggleModal}>\r\n                <span className=\"fa fa-pencil\"></span> Submit Comment\r\n            </button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null)\r\n            return(\r\n                <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                        <CardTitle><h3>{dish.name}</h3></CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n        if (comments != null){\r\n            return(\r\n                <div className=\"col-12  m-1\">\r\n                     <h4>Comments</h4>\r\n                     <ul className = \"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) =>{\r\n                                return (\r\n                                    <Fade in>\r\n                                        <li key = {comment.id}>\r\n                                        <p> {comment.comment} </p>\r\n                                        <p>-- {comment.author}, {new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                                year: \"numeric\",\r\n                                                                month: \"long\",\r\n                                                                day: \"2-digit\",\r\n                                                                }).format(new Date(comment.date))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                     </ul> \r\n                     <SubmitCommentForm dishId={dishId} postComment={postComment} /> \r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) \r\n            return (\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments} postComment={props.postComment}\r\n                            dishId={props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            \r\n            );\r\n            else \r\n                return(\r\n                    <div></div>\r\n                );\r\n    }\r\n    \r\nexport default DishDetail;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n  dispatch(leadersLoading(true));\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email,agree,contactType,message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname:firstname,\r\n    lastname:lastname, \r\n    telnum:telnum, \r\n    email:email,\r\n    agree:agree,\r\n    contactType:contactType,\r\n    message:message\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n      var errMsg = new Error(error.message);\r\n      throw errMsg;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => console.log(response))\r\n  .catch(error =>  { console.log('post feedbacks', error.message); \r\n                      alert('Your feedback could not be submitted\\nError: '+error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback : (firstname, lastname, telnum, email,agree,contactType,message) =>\r\n                 dispatch(postFeedback (firstname, lastname, telnum, email,agree,contactType,message)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => {dispatch(fetchLeaders())}\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n            <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                isLoading={this.props.dishes.isLoading}\r\n                errMess={this.props.dishes.errMess}\r\n                comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                commentsErrMess={this.props.comments.errMess}\r\n                postComment={this.props.postComment}\r\n            />\r\n      );\r\n    };\r\n\r\n    \r\n    return (\r\n          <div>\r\n            <Header />\r\n            <TransitionGroup>\r\n              <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                <Switch>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders = {this.props.leaders}/>}  />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\r\n                  <Redirect to=\"/home\" />\r\n                </Switch>\r\n              </CSSTransition>\r\n             </TransitionGroup>\r\n            <Footer />\r\n          </div>\r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading :true,\r\n    errMess : null,\r\n    leaders : []\r\n    },\r\n     action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}